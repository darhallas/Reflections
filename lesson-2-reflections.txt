What happens when you initialize a repository? Why do you need to do it?
	
	It creates a ".git" folder in the current folder which is then the repository.
	It is needed to start tracking changes to files in the repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area is the first step towards creating a commit in your repository.
	It allows you to choose which files you would like to commit rather than committing
	everything at once.

How can you use the staging area to make sure you have one commit per logical
change?

	You can check the differences between the file in the staging area and the latest file
	that has been commited. You can also check the difference between the file in the staging
	area compared to the one in the working directory.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	Branches would help if you are trying out a new feature but aren't sure yet if
	you actually want it as part of your code. You may also want to create another
	version of the code without affecting your current one.

How do the diagrams help you visualize the branch structure?

	The diagrams are a visualisation of the branch structure.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
